* T-Recs
  
[[https://travis-ci.org/iachettifederico/trecs][Build State]] [[https://travis-ci.org/iachettifederico/trecs.svg]]

#+BEGIN_EXAMPLE
                __________
               /  o       \
               |      ____|
               |     |___
               |    ____/
              _|   |
            _|     |===E
   /\     _|       ===E
   \ \___|         |
    \___          /
 _____ ____     _/              
|_   _|  _ \ ___  ___ ___ 
  | | | |_) / _ \/ __/ __|
  | | |  _ <  __/ (__\__ \
  |_| |_| \_\___|\___|___/

#+END_EXAMPLE

Text Recordings.

Record screencasts in plain text.

** Still under development
This project is still under development. It's not yet ready for use.

** Installing TRecs
To install TRecs, just run
#+BEGIN_SRC bash
gem install trecs
#+END_SRC

** Usage
*** Reproduce a TRecs
You have a TRecs file and want to reproduce it? You can do it on a terminal using the =trecs= command.

Like this:
#+BEGIN_SRC bash
trecs <file>
#+END_SRC

You can also specify the refresh interval for the screen (terminal), using the =--step= argument.
The value has to be an integer representing the amount of milliseconds between each screen refresh.

#+BEGIN_SRC bash
trecs <file> --step=800
trecs <file> -s 800
#+END_SRC

*** Recording a TRecs
Wanna record a TRecs? Do it using the =trecs_record= command.

There are several recording plugins available for use

Each options has a set of available flags (NOTE: the =--help= argument don't explain each one in detail yet)

The main option to select the recording alternative is the Recording Strategy, passed to TRecs via the =--strategy= (=-s=) argument.

Here it's also available the =--step= option, which will define the time between frames in milliseconds.

**** Terminal session
The most obvious use for this gem is recording a terminal session. This feature will be the default in the future, but it's not fully implemented yet.

To record a terminal session, use the =--strategy=ttyrec= option:
#+BEGIN_SRC bash
trecs_record playing_with_bash.trecs --strategy=ttyrec
#+END_SRC

This will open a new terminal session to record. You can finish the recording typing =exit= or pressing =C-d=, then the session will be saved to =playing_with_bash.trecs= and will be ready for replaying.

**** Record a file's changes
You can record the changes that occur on a file by using =--strategy=raw-file=.

What this does is sample a file every =step= milliseconds and create a frame with that file's contents.

To use it:
#+BEGIN_SRC bash
trecs_record my_changes.trecs --strategy=raw_file
#+END_SRC

**** Incremental message TRecs
Another possibility is to record a text message that will appear on screen character by character with an interval of =step= milliseconds. This is currently the default functionality of the command =trecs_record=

#+BEGIN_SRC bash
trecs_record my_banner.trecs --strategy=incremental --step=50 --message="TRecs"
#+END_SRC

This will create 6 frames:

- 0 millis :: ""
- 50 millis :: "T"
- 100 millis :: "TR"
- 150 millis :: "TRe"
- 200 millis :: "TRec"
- 250 millis :: "TRecs"

** Extending TRecs
Right now, you can extend TRecs in three possible ways

- Recording Strategies :: This is the object that defines what to record and how to process the input to be converted into frames. To give an example, the IncrementalStrategy (provided by TRecs), will take an input string, make an array with each of it's characters and, for each char, append it to an output string and save the frame.
- Formats :: The format corresponds to the way the frames are stored. For example, using YamlStore, a tar file or a database.
- Tickers :: The Ticker is the way the user tells TRecs to advance frames. 

# *** TODO Recording Strategies
# *** TODO Formats
# *** TODO Tickers
